% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hurdle.R
\name{hurdle}
\alias{hurdle}
\title{Hurdle Model Count Data Regression}
\usage{
hurdle(y, x = NULL, hurd = Inf, dist = c("poisson", "nb", "lognormal",
  "gpd"), dist.2 = c("none", "gpd", "poisson", "lognormal", "nb"),
  control = hurdle_control(), iters = 1000, burn = 500, nthin = 1,
  plots = T, progress.bar = T)
}
\arguments{
\item{y}{numeric response vector.}

\item{x}{numeric predictor matrix.}

\item{hurd}{numeric threshold for 'extreme' observations of two-hurdle models. 
\code{Inf} for one-hurdle models.}

\item{dist}{character specification of response distribution.}

\item{dist.2}{character specification of response distribution for 
'extreme' observations of two-hurdle models.}

\item{control}{list of parameters for controlling the fitting process, 
specified by \code{\link{hurdle_control}}.}

\item{iters}{number of iterations for the Markov chain to run.}

\item{burn}{numeric burn-in length.}

\item{nthin}{numeric thinning rate.}

\item{plots}{logical operator. \code{TRUE} to output plots.}

\item{progress.bar}{logical operator. \code{TRUE} to print progress bar.}
}
\value{

}
\description{
\code{hurdle} is used to fit single or 
double-hurdle regression models to count data via Bayesian inference.
}
\details{

}
\examples{
#Generate some data:
p=0.5; q=0.25; lam=3;
mu=10; sigma=7; xi=0.75;
n=200

set.seed(2016)
y <- rbinom(n,1,p)
nz <- sum(1-y)
extremes <- rbinom(sum(y),1,q)
ne <- sum(extremes)
nt <- n-nz-ne
yt <- sample(mu-1,nt,replace=T,prob=dpois(1:(mu-1),3)/(ppois(mu-1,lam)-ppois(0,lam)))
yz <- round(rgpd(nz,mu,sigma,xi))
y[y==1] <- c(yt,yz)

m1 <- hurdle()











}
\author{
Taylor Trippe <\email{ttrippe@luc.edu}> \cr
Earvin Balderama <\email{ebalderama@luc.edu}>
}

